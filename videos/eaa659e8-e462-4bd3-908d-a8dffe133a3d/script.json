[{"title": "Types of Data Structures", "content": ["- Data structures are a fundamental concept in computer science, providing organized ways to store and manage data.", "They are essential for efficient data access, manipulation, and retrieval.", "Understanding various data structures is crucial for developing effective algorithms and software applications."], "image_desc": "A colorful diagram illustrating various data structures, such as arrays, linked lists, stacks, queues, trees, and graphs.", "narration": "Namaste! Aaj hum alag-alag data structures ke baare mein jaanenge. Ye data ko organize karne ke tareeke hain, jo computer programming mein bahut zaroori hain. Hum different types ke data structures dekhenge, jaise array, linked list, stack, queue, tree, aur graph", "slide_number": "1", "image_url": "https://miro.medium.com/max/1200/1*i1SgZnkB-_mrec4MvRJn4Q.png", "image_path": "data/videos/eaa659e8-e462-4bd3-908d-a8dffe133a3d/images/image_1.webp"}, {"title": "Arrays", "content": ["- An **array** is a linear data structure that stores a fixed number of elements of the same data type.", "Elements are stored in consecutive memory locations, allowing for efficient access and manipulation.", "Accessing elements is done using an index, starting from 0 for the first element."], "image_desc": "A visual representation of an array with numbered elements, highlighting the index-based access.", "narration": "Array ek linear data structure hai jo ek hi data type ke elements ko store karta hai. Elements ko continuous memory location mein rakha jaata hai, jisse un tak aasani se pahunch sakte hain. Elements ko ek index ka use karke access kiya jaata hai, jo pehle element ke liye 0 se shuru hota hai.", "slide_number": "2", "image_url": "/data/videos/eaa659e8-e462-4bd3-908d-a8dffe133a3d/images/image_2.webp", "image_path": "data/videos/eaa659e8-e462-4bd3-908d-a8dffe133a3d/images/image_2.webp"}, {"title": "Linked Lists", "content": ["- A **linked list** is a dynamic data structure composed of nodes, each containing data and a pointer to the next node.", "Nodes are not stored in consecutive memory locations, allowing for flexible insertion and deletion.", "The first node is called the **head**, and the last node points to NULL."], "image_desc": "A diagram of a linked list with nodes connected by arrows, showing the head and NULL pointer.", "narration": "Linked list ek dynamic data structure hai jo nodes se bana hota hai. Har node mein data aur agle node ka pointer hota hai. Nodes ko continuous memory location mein store nahi kiya jaata, jisse elements ko aasani se joda aur hata sakte hain. Pehla node head kehlaata hai, aur aakhri node NULL ko point karta hai", "slide_number": "3", "image_url": "https://www.projectmanager.com/wp-content/uploads/2021/05/Activity-on-Arrow-Diagram.png", "image_path": "data/videos/eaa659e8-e462-4bd3-908d-a8dffe133a3d/images/image_3.webp"}, {"title": "Stacks", "content": ["- A **stack** is a linear data structure that follows a Last-In, First-Out (LIFO) principle.", "Elements are added and removed from the **top** of the stack.", "Common operations include **push** (add), **pop** (remove), and **peek** (view top element)."], "image_desc": "A visual representation of a stack with elements stacked on top of each other, showing the top element.", "narration": "Stack ek linear data structure hai jo Last-In, First-Out (LIFO) principle ka palan karta hai. Elements ko stack ke top par joda aur hataaya jaata hai. General operations mein push (jodna), pop (hataana), aur peek (top element ko dekhna) shamil hain.", "slide_number": "4", "image_url": "/data/videos/eaa659e8-e462-4bd3-908d-a8dffe133a3d/images/image_4.webp", "image_path": "data/videos/eaa659e8-e462-4bd3-908d-a8dffe133a3d/images/image_4.webp"}, {"title": "Queues", "content": ["- A **queue** is a linear data structure that follows a First-In, First-Out (FIFO) principle.", "Elements are added to the **rear** and removed from the **front**.", "Common operations include **enqueue** (add), **dequeue** (remove), and **front** and **rear** pointers."], "image_desc": "A diagram of a queue with elements arranged in a line, showing the front and rear positions.", "narration": "Queue ek linear data structure hai jo First-In, First-Out (FIFO) principle ka palan karta hai. Elements ko queue ke rear par joda jaata hai aur front se hataaya jaata hai. General operations mein enqueue (jodna), dequeue (hataana), aur front aur rear pointers shamil hain", "slide_number": "5", "image_url": "https://media.geeksforgeeks.org/wp-content/uploads/queue-1.png", "image_path": "data/videos/eaa659e8-e462-4bd3-908d-a8dffe133a3d/images/image_5.webp"}, {"title": "Trees", "content": ["- A **tree** is a non-linear data structure that organizes data in a hierarchical manner.", "It consists of nodes with a parent-child relationship, with one node designated as the **root**.", "Trees are used for representing organizational structures and efficient data retrieval."], "image_desc": "A diagram of a tree with nodes connected by branches, showing the root, leaf nodes, and levels.", "narration": "Tree ek non-linear data structure hai jo data ko hierarchical tareeke se organize karta hai. Ismein nodes hote hain jinke beech parent-child relationship hota hai, aur ek node ko root kehte hain. Tree ka use organizational structures aur efficient data retrieval ke liye hota hai.", "slide_number": "6", "image_url": "/data/videos/eaa659e8-e462-4bd3-908d-a8dffe133a3d/images/image_6.webp", "image_path": "data/videos/eaa659e8-e462-4bd3-908d-a8dffe133a3d/images/image_6.webp"}, {"title": "Graphs", "content": "- A **graph** is a data structure that represents relationships between pairs of elements.,It consists of **vertices** (nodes) and **edges** that connect them.,Graphs can be **directed** or **undirected**, and **weighted** with values on edges., **Notes** In Description below", "image_desc": "A diagram of a graph with vertices and edges, showing different types of connections and weights.", "narration": "Graph ek data structure hai jo elements ke jodon ke beech sambandhon ko darshata hai. Ismein vertices (nodes) aur edges hote hain jo unhe jodte hain. Graph directed ya undirected ho sakte hain, aur edges par value ke saath weighted bhi ho sakte hain.\n\nThis overview of various data structures highlights their fundamental properties and operations, serving as a crucial foundation for further exploration in data management and algorithm design. If you have any questions or wish to delve deeper into any specific data structure, feel free to ask!", "slide_number": "7", "image_url": "/data/videos/eaa659e8-e462-4bd3-908d-a8dffe133a3d/images/image_7.webp", "image_path": "data/videos/eaa659e8-e462-4bd3-908d-a8dffe133a3d/images/image_7.webp"}]