[{"title": "Introduction", "content": ["- Welcome to this video on the classification of data structures!", "Understanding data structures is crucial for efficient programming and algorithm design.", "Today, we'll explore the two primary categories of data structures: Primitive and Non-Primitive, as well as the essential operations performed on them."], "image_desc": "A diagram showing the two primary categories of data structures, Primitive and Non-Primitive, with arrows pointing to their subcategories.", "narration": "\u0928\u092e\u0938\u094d\u0924\u0947! \u0906\u091c \u0939\u092e \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930\u094d\u0938 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u091c\u093e\u0928\u0947\u0902\u0917\u0947\u0964 \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930\u094d\u0938 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092e\u0947\u0902 \u092c\u0939\u0941\u0924 \u091c\u093c\u0930\u0942\u0930\u0940 \u0939\u0948\u0902\u0964 \u0939\u092e \u0926\u094b \u0924\u0930\u0939 \u0915\u0947 \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930\u094d\u0938 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u091c\u093e\u0928\u0947\u0902\u0917\u0947: \u092a\u094d\u0930\u093f\u092e\u093f\u091f\u093f\u0935 \u0914\u0930 \u0928\u0949\u0928-\u092a\u094d\u0930\u093f\u092e\u093f\u091f\u093f\u0935\u0964 \u0938\u093e\u0925 \u0939\u0940 \u0939\u092e \u0907\u0928 \u092a\u0930 \u0939\u094b\u0928\u0947 \u0935\u093e\u0932\u0947 \u0911\u092a\u0930\u0947\u0936\u0928\u094d\u0938 \u092d\u0940 \u0926\u0947\u0916\u0947\u0902\u0917\u0947\u0964", "slide_number": "1", "image_url": "https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgWinKlRP-T_KctWzA6oG5X4_oHkxgde5gE6LBlT1PO38f-E_Kg4K-llDwJPLlMbn7jXXTzfEp2cm5CyRaY9_pAyDQNTLkGJrAF7jffhwdJUT3-LvX7xNtU-yKpFAkP9BcoHBQdmp_aPqKwXR9ON2-B024O4xyejRYnnvuJ3hNP2ZeQ_QTCvsgNSxIPFQ/s900/3333333.jpg", "image_path": "data/videos/e9f5e358-f066-475c-8d57-3b604e868e6c/images/image_1.webp"}, {"title": "Overview of Data Structures", "content": ["- Data structures can be broadly classified into two categories:\n    - **Primitive Data Structures** (also known as built-in)\n    - **Non-Primitive Data Structures** (user-defined)", "This classification helps us understand the complexity and usage of different data types in programming."], "image_desc": "A flowchart showing the classification of data structures into Primitive and Non-Primitive, with examples of each type.", "narration": "\u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930\u094d\u0938 \u0915\u094b \u0926\u094b \u092d\u093e\u0917\u094b\u0902 \u092e\u0947\u0902 \u092c\u093e\u0902\u091f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948: \u092a\u094d\u0930\u093f\u092e\u093f\u091f\u093f\u0935 \u0914\u0930 \u0928\u0949\u0928-\u092a\u094d\u0930\u093f\u092e\u093f\u091f\u093f\u0935\u0964 \u092f\u0947 \u0915\u094d\u0932\u093e\u0938\u093f\u092b\u093f\u0915\u0947\u0936\u0928 \u0939\u092e\u0947\u0902 \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092e\u0947\u0902 \u0905\u0932\u0917-\u0905\u0932\u0917 \u0921\u0947\u091f\u093e \u091f\u093e\u0907\u092a\u094d\u0938 \u0915\u094b \u0938\u092e\u091d\u0928\u0947 \u092e\u0947\u0902 \u092e\u0926\u0926 \u0915\u0930\u0924\u093e \u0939\u0948\u0964", "slide_number": "2", "image_url": "https://i.pinimg.com/originals/50/5c/ef/505ceff03f60b13dc76ff2fff427a4b6.png", "image_path": "data/videos/e9f5e358-f066-475c-8d57-3b604e868e6c/images/image_2.webp"}, {"title": "Primitive Data Structures", "content": ["- Let's start with Primitive Data Structures.", "These are the basic building blocks of data manipulation and are directly operated upon by machine instructions.", "Their representations can vary across different computing environments.", "Common examples include:\n    - **Integers**: Whole numbers used in arithmetic operations.\n    - **Floating-point numbers**: Represent real numbers and support decimal points.\n    - **Character constants**: Individual characters, like letters or symbols.\n    - **String constants**: Sequences of characters.\n    - **Pointers**: Variables that store memory addresses.", "These structures are foundational, as they serve as the core components for more complex data structures."], "image_desc": "A table listing the common primitive data structures with their descriptions and examples.", "narration": "\u092a\u0939\u0932\u0947 \u0939\u092e \u092a\u094d\u0930\u093f\u092e\u093f\u091f\u093f\u0935 \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930\u094d\u0938 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u091c\u093e\u0928\u0947\u0902\u0917\u0947\u0964 \u092f\u0947 \u0921\u0947\u091f\u093e \u092e\u0948\u0928\u093f\u092a\u0941\u0932\u0947\u0936\u0928 \u0915\u0947 \u092c\u0947\u0938\u093f\u0915 \u092c\u094d\u0932\u0949\u0915 \u0939\u0948\u0902\u0964 \u0907\u0928\u0915\u094b \u092e\u0936\u0940\u0928 \u0907\u0902\u0938\u094d\u091f\u094d\u0930\u0915\u094d\u0936\u0928\u094d\u0938 \u0926\u094d\u0935\u093e\u0930\u093e \u0921\u093e\u092f\u0930\u0947\u0915\u094d\u091f\u0932\u0940 \u0911\u092a\u0930\u0947\u091f \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u0907\u0928\u0915\u0940 \u0930\u093f\u092a\u094d\u0930\u0947\u091c\u0947\u0902\u091f\u0947\u0936\u0928 \u0905\u0932\u0917-\u0905\u0932\u0917 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u093f\u0902\u0917 \u090f\u0928\u0935\u093e\u092f\u0930\u092e\u0947\u0902\u091f\u094d\u0938 \u092e\u0947\u0902 \u0905\u0932\u0917-\u0905\u0932\u0917 \u0939\u094b \u0938\u0915\u0924\u0940 \u0939\u0948\u0964 \u0915\u0941\u091b \u0915\u0949\u092e\u0928 \u090f\u0917\u094d\u091c\u093e\u0902\u092a\u0932\u094d\u0938 \u0939\u0948\u0902: \u0907\u0902\u091f\u0940\u091c\u0930\u094d\u0938, \u092b\u094d\u0932\u094b\u091f\u093f\u0902\u0917-\u092a\u0949\u0907\u0902\u091f \u0928\u0902\u092c\u0930\u094d\u0938, \u0915\u0948\u0930\u0947\u0915\u094d\u091f\u0930 \u0915\u0949\u0928\u094d\u0938\u094d\u091f\u0948\u0902\u091f\u094d\u0938, \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0915\u0949\u0928\u094d\u0938\u094d\u091f\u0948\u0902\u091f\u094d\u0938, \u0914\u0930 \u092a\u0949\u0907\u0902\u091f\u0930\u094d\u0938\u0964 \u092f\u0947 \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930\u094d\u0938 \u092c\u0939\u0941\u0924 \u091c\u093c\u0930\u0942\u0930\u0940 \u0939\u0948\u0902 \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u092f\u0947 \u0915\u0949\u092e\u094d\u092a\u094d\u0932\u0947\u0915\u094d\u0938 \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930\u094d\u0938 \u0915\u0947 \u0932\u093f\u090f \u092c\u0947\u0938\u093f\u0915 \u0915\u0902\u092a\u094b\u0928\u0947\u0902\u091f\u094d\u0938 \u0939\u0948\u0902\u0964", "slide_number": "3", "image_url": "https://imgv2-2-f.scribdassets.com/img/document/480982194/original/6436530dcf/1693542042?v=1", "image_path": "data/videos/e9f5e358-f066-475c-8d57-3b604e868e6c/images/image_3.webp"}, {"title": "Non-Primitive Data Structures", "content": ["- Now, let's discuss Non-Primitive Data Structures.", "These structures are more complex and are derived from primitive types.", "They allow us to organize and manage large volumes of data efficiently.", "Non-Primitive structures can be categorized into:\n    - **Linear Data Structures**: Each element is connected in a sequence. Examples include:\n        - **Arrays**: Collections of elements of the same type, accessible via indices.\n        - **Lists**: Can be homogeneous or heterogeneous.\n        - **Stacks**: Follow a Last In First Out (LIFO) order.\n        - **Queues**: Follow a First In First Out (FIFO) order.\n    - **Non-Linear Data Structures**: Elements are arranged in a hierarchical manner. Examples include:\n        - **Trees**: Structures that represent hierarchical relationships.\n        - **Graphs**: Collections of nodes connected by edges, useful for representing networks.", "These structures emphasize organizing data in a way that enhances access and manipulation."], "image_desc": "A diagram showing the classification of Non-Primitive data structures into Linear and Non-Linear, with examples of each type.", "narration": "\u0905\u092c \u0939\u092e \u0928\u0949\u0928-\u092a\u094d\u0930\u093f\u092e\u093f\u091f\u093f\u0935 \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930\u094d\u0938 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u091c\u093e\u0928\u0947\u0902\u0917\u0947\u0964 \u092f\u0947 \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930\u094d\u0938 \u092a\u094d\u0930\u093f\u092e\u093f\u091f\u093f\u0935 \u091f\u093e\u0907\u092a\u094d\u0938 \u0938\u0947 \u092c\u0928\u0924\u0947 \u0939\u0948\u0902 \u0914\u0930 \u091c\u093c\u094d\u092f\u093e\u0926\u093e \u0915\u0949\u092e\u094d\u092a\u094d\u0932\u0947\u0915\u094d\u0938 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964 \u0907\u0928\u0938\u0947 \u0939\u092e \u092c\u0921\u093c\u0940 \u092e\u093e\u0924\u094d\u0930\u093e \u092e\u0947\u0902 \u0921\u0947\u091f\u093e \u0915\u094b \u0911\u0930\u094d\u0917\u0947\u0928\u093e\u0907\u091c\u093c \u0914\u0930 \u092e\u0948\u0928\u0947\u091c \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u0928\u0949\u0928-\u092a\u094d\u0930\u093f\u092e\u093f\u091f\u093f\u0935 \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930\u094d\u0938 \u0915\u094b \u0926\u094b \u0924\u0930\u0939 \u0938\u0947 \u092c\u093e\u0902\u091f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948: \u0932\u0940\u0928\u093f\u092f\u0930 \u0914\u0930 \u0928\u0949\u0928-\u0932\u0940\u0928\u093f\u092f\u0930\u0964 \u0932\u0940\u0928\u093f\u092f\u0930 \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930\u094d\u0938 \u092e\u0947\u0902 \u090f\u0932\u093f\u092e\u0947\u0902\u091f\u094d\u0938 \u090f\u0915 \u0938\u0940\u0915\u094d\u0935\u0947\u0902\u0938 \u092e\u0947\u0902 \u091c\u0941\u0921\u093c\u0947 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964 \u0915\u0941\u091b \u090f\u0917\u094d\u091c\u093e\u0902\u092a\u0932\u094d\u0938 \u0939\u0948\u0902: \u090f\u0930\u0947, \u0932\u093f\u0938\u094d\u091f\u094d\u0938, \u0938\u094d\u091f\u0948\u0915\u094d\u0938, \u0914\u0930 \u0915\u094d\u092f\u0942\u091c\u093c\u0964 \u0928\u0949\u0928-\u0932\u0940\u0928\u093f\u092f\u0930 \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930\u094d\u0938 \u092e\u0947\u0902 \u090f\u0932\u093f\u092e\u0947\u0902\u091f\u094d\u0938 \u0939\u093e\u092f\u0930\u093e\u0930\u094d\u0915\u093f\u0915\u0932 \u0924\u0930\u0940\u0915\u0947 \u0938\u0947 \u091c\u0941\u0921\u093c\u0947 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964 \u0915\u0941\u091b \u090f\u0917\u094d\u091c\u093e\u0902\u092a\u0932\u094d\u0938 \u0939\u0948\u0902: \u091f\u094d\u0930\u0940\u091c\u093c \u0914\u0930 \u0917\u094d\u0930\u093e\u092b\u093c\u094d\u0938\u0964 \u092f\u0947 \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930\u094d\u0938 \u0921\u0947\u091f\u093e \u0915\u094b \u0910\u0938\u0947 \u0911\u0930\u094d\u0917\u0947\u0928\u093e\u0907\u091c\u093c \u0915\u0930\u0924\u0947 \u0939\u0948\u0902 \u091c\u093f\u0938\u0938\u0947 \u0921\u0947\u091f\u093e \u0915\u094b \u0906\u0938\u093e\u0928\u0940 \u0938\u0947 \u090f\u0915\u094d\u0938\u0947\u0938 \u0914\u0930 \u092e\u0948\u0928\u093f\u092a\u0941\u0932\u0947\u091f \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0947\u0964", "slide_number": "4", "image_url": "https://www.altexsoft.com/static/blog-post/2024/2/95cd67e6-5faf-4766-9420-199b79b983ef.png", "image_path": "data/videos/e9f5e358-f066-475c-8d57-3b604e868e6c/images/image_4.webp"}, {"title": "Operations on Data Structures", "content": ["- Now that we understand the types of data structures, let's look at the basic operations performed on them.", "**Traversing**: This involves accessing each record in the structure exactly once. During this process, we may perform various actions on the data, often referred to as \"visiting\" the records.", "**Searching**: This operation helps find specific data items within a structure. It can also locate multiple elements that meet certain criteria.", "**Inserting**: This refers to adding new data elements to a data structure, expanding its size and capacity.", "**Deleting**: This operation removes existing data elements, which may require prior searching to find the location of the desired record."], "image_desc": "A diagram showing the basic operations performed on data structures: traversing, searching, inserting, and deleting.", "narration": "\u0905\u092c \u0939\u092e \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930\u094d\u0938 \u092a\u0930 \u0939\u094b\u0928\u0947 \u0935\u093e\u0932\u0947 \u092c\u0947\u0938\u093f\u0915 \u0911\u092a\u0930\u0947\u0936\u0928\u094d\u0938 \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u091c\u093e\u0928\u0947\u0902\u0917\u0947\u0964 \u091f\u094d\u0930\u0948\u0935\u0930\u094d\u0938\u093f\u0902\u0917 \u092e\u0947\u0902 \u0939\u092e \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930 \u092e\u0947\u0902 \u0939\u0930 \u0930\u093f\u0915\u0949\u0930\u094d\u0921 \u0915\u094b \u090f\u0915 \u092c\u093e\u0930 \u090f\u0915\u094d\u0938\u0947\u0938 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 \u0938\u0930\u094d\u091a\u093f\u0902\u0917 \u092e\u0947\u0902 \u0939\u092e \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930 \u092e\u0947\u0902 \u0915\u093f\u0938\u0940 \u0916\u093e\u0938 \u0921\u0947\u091f\u093e \u0906\u0907\u091f\u092e \u0915\u094b \u0922\u0942\u0902\u0922\u0924\u0947 \u0939\u0948\u0902\u0964 \u0907\u0902\u0938\u0930\u094d\u091f\u093f\u0902\u0917 \u092e\u0947\u0902 \u0939\u092e \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930 \u092e\u0947\u0902 \u0928\u090f \u0921\u0947\u091f\u093e \u090f\u0932\u093f\u092e\u0947\u0902\u091f\u094d\u0938 \u0915\u094b \u091c\u094b\u0921\u093c\u0924\u0947 \u0939\u0948\u0902\u0964 \u0921\u093f\u0932\u0940\u091f\u093f\u0902\u0917 \u092e\u0947\u0902 \u0939\u092e \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930 \u0938\u0947 \u092e\u094c\u091c\u0942\u0926 \u0921\u0947\u091f\u093e \u090f\u0932\u093f\u092e\u0947\u0902\u091f\u094d\u0938 \u0915\u094b \u0939\u091f\u093e\u0924\u0947 \u0939\u0948\u0902\u0964", "slide_number": "5", "image_url": "https://www.guru99.com/images/1/020820_0600_BinarySearc4.png", "image_path": "data/videos/e9f5e358-f066-475c-8d57-3b604e868e6c/images/image_5.webp"}, {"title": "Advanced Operations", "content": ["- In addition to the basic operations, we also have:", "**Sorting**: This process arranges the data items in a particular order, such as ascending or descending. Sorting is crucial for efficient searching and data management.", "**Merging**: This operation combines records from two different sorted files into a single, sorted file. It's especially useful in database management and data processing."], "image_desc": "A diagram showing the advanced operations performed on data structures: sorting and merging.", "narration": "\u092c\u0947\u0938\u093f\u0915 \u0911\u092a\u0930\u0947\u0936\u0928\u094d\u0938 \u0915\u0947 \u0905\u0932\u093e\u0935\u093e, \u0915\u0941\u091b \u090f\u0921\u0935\u093e\u0902\u0938\u094d\u0921 \u0911\u092a\u0930\u0947\u0936\u0928\u094d\u0938 \u092d\u0940 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964 \u0938\u0949\u0930\u094d\u091f\u093f\u0902\u0917 \u092e\u0947\u0902 \u0939\u092e \u0921\u0947\u091f\u093e \u0906\u0907\u091f\u092e \u0915\u094b \u0915\u093f\u0938\u0940 \u0916\u093e\u0938 \u0911\u0930\u094d\u0921\u0930 \u092e\u0947\u0902 \u0905\u0930\u0947\u0902\u091c \u0915\u0930\u0924\u0947 \u0939\u0948\u0902\u0964 \u092e\u0930\u094d\u091c\u093f\u0902\u0917 \u092e\u0947\u0902 \u0939\u092e \u0926\u094b \u0905\u0932\u0917-\u0905\u0932\u0917 \u0938\u0949\u0930\u094d\u091f\u0947\u0921 \u092b\u093e\u0907\u0932\u094d\u0938 \u0915\u094b \u090f\u0915 \u0938\u0949\u0930\u094d\u091f\u0947\u0921 \u092b\u093e\u0907\u0932 \u092e\u0947\u0902 \u092e\u093f\u0932\u093e\u0924\u0947 \u0939\u0948\u0902\u0964", "slide_number": "6", "image_url": "https://programmer.ink/images/think/a9cbe2124842701a5790d5e2f2054c3f.jpg", "image_path": "data/videos/e9f5e358-f066-475c-8d57-3b604e868e6c/images/image_6.webp"}, {"title": "Conclusion", "content": ["- In summary, the classification of data structures into Primitive and Non-Primitive types helps us understand how data can be organized and manipulated effectively.", "The operations we perform on these structures\u2014such as traversing, searching, inserting, deleting, sorting, and merging\u2014are essential for efficient data handling in programming."], "image_desc": "A diagram showing the classification of data structures, with examples of each type and the basic and advanced operations performed on them.", "narration": "\u0924\u094b, \u0939\u092e\u0928\u0947 \u0926\u0947\u0916\u093e \u0915\u093f \u0921\u0947\u091f\u093e \u0938\u094d\u091f\u094d\u0930\u0915\u094d\u091a\u0930\u094d\u0938 \u0915\u094b \u092a\u094d\u0930\u093f\u092e\u093f\u091f\u093f\u0935 \u0914\u0930 \u0928\u0949\u0928-\u092a\u094d\u0930\u093f\u092e\u093f\u091f\u093f\u0935 \u092e\u0947\u0902 \u0915\u0948\u0938\u0947 \u092c\u093e\u0902\u091f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u0907\u0928 \u0911\u092a\u0930\u0947\u0936\u0928\u094d\u0938 \u0915\u094b \u0938\u092e\u091d\u0928\u093e \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e\u093f\u0902\u0917 \u092e\u0947\u0902 \u0921\u0947\u091f\u093e \u0915\u094b \u0939\u0948\u0902\u0921\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092c\u0939\u0941\u0924 \u091c\u093c\u0930\u0942\u0930\u0940 \u0939\u0948\u0964 \nThank you for watching! Understanding these concepts is fundamental for your studies and future projects in computer science. Good luck with your exams!\n\n*Narration:  \u0906\u092a\u0915\u093e \u092c\u0939\u0941\u0924-\u092c\u0939\u0941\u0924 \u0927\u0928\u094d\u092f\u0935\u093e\u0926! \u092f\u0947 \u0915\u0949\u0928\u094d\u0938\u0947\u092a\u094d\u091f\u094d\u0938 \u0906\u092a\u0915\u0947 \u0915\u0902\u092a\u094d\u092f\u0942\u091f\u0930 \u0938\u093e\u0907\u0902\u0938 \u0915\u0947 \u092a\u0922\u093c\u093e\u0908 \u0914\u0930 \u092a\u094d\u0930\u094b\u091c\u0947\u0915\u094d\u091f\u094d\u0938 \u0915\u0947 \u0932\u093f\u090f \u092c\u0939\u0941\u0924 \u091c\u093c\u0930\u0942\u0930\u0940 \u0939\u0948\u0902\u0964 \u0906\u092a\u0915\u0940 \u090f\u0917\u094d\u091c\u093e\u092e \u0915\u0947 \u0932\u093f\u090f \u0936\u0941\u092d\u0915\u093e\u092e\u0928\u093e\u090f\u0902!", "slide_number": "7", "image_url": "https://msatechnosoft.in/blog/wp-content/uploads/2018/09/data-structure-types-msa-technosoft.jpg", "image_path": "data/videos/e9f5e358-f066-475c-8d57-3b604e868e6c/images/image_7.webp"}]