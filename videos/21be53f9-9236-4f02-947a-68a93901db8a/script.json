[{"slide_number": "1", "title": "Django Tutorial: A Beginner's Guide", "slide_type": "Title Slide", "content": "(No additional content for Title Slide)", "image_desc": "A stylized image of the Django logo.", "narration": "Welcome to this beginner's guide to Django!  We'll cover the basics of setting up and using this powerful Python web framework.", "image_url": "https://logos-download.com/wp-content/uploads/2019/06/Django_Logo.png", "image_path": "data/videos/21be53f9-9236-4f02-947a-68a93901db8a/images/image_1.webp"}, {"slide_number": "2", "title": "What is Django?", "slide_type": "Image Left", "content": "High-level Python web framework\nRapid development of complex web apps\nFollows the Model-View-Controller (MVC) pattern", "image_desc": "An image depicting the MVC architectural pattern.", "narration": "Django is a high-level Python web framework designed for rapid development. It uses the Model-View-Controller pattern, making it efficient and organized.", "image_url": "https://www.crio.do/blog/content/images/size/w1600/2021/07/Components-of-MVC-Architecture-Pattern.png", "image_path": "data/videos/21be53f9-9236-4f02-947a-68a93901db8a/images/image_2.webp"}, {"slide_number": "3", "title": "Why Use Django?", "slide_type": "Two Columns", "content": "**Column 1: Benefits**\nRapid Development\nScalability\nSecurity\n**Column 2: Advantages**\nLarge and Active Community\nExtensive Documentation", "image_desc": "An image showing a graph representing growth or scalability.", "narration": "Django offers several key advantages.  Its built-in features make development fast, it scales well to handle large amounts of traffic, and it includes robust security features. Plus, a large and supportive community is always ready to help.", "image_url": "https://thumbs.dreamstime.com/z/chart-showing-steady-upward-trend-representing-idea-growth-financial-success-business-generative-ai-colorful-268220054.jpg", "image_path": "data/videos/21be53f9-9236-4f02-947a-68a93901db8a/images/image_3.webp"}, {"slide_number": "4", "title": "Installation", "slide_type": "Image with Caption", "content": "Install Python 3.7 or later\nOpen your terminal and run: 'pip install django'", "image_desc": "A screenshot of a terminal window showing the successful installation of Django using pip.", "narration": "First, make sure you have Python 3.7 or later installed. Then, open your terminal and type 'pip install django'. This will install the Django framework.", "image_url": "https://cdn.educba.com/academy/wp-content/uploads/2019/02/Step-11-1.png", "image_path": "data/videos/21be53f9-9236-4f02-947a-68a93901db8a/images/image_4.webp"}, {"slide_number": "5", "title": "Creating a New Project", "slide_type": "Image Right", "content": "'mkdir my_google_project'\n'cd my_google_project'\n'django-admin startproject my_google_project'", "image_desc": "A screenshot showing a file explorer with a newly created project directory.", "narration": "Create a new directory for your project, navigate into it, and then use the command 'django-admin startproject my_google_project' to initialize your Django project.", "image_url": "https://www.thewindowsclub.com/wp-content/uploads/2016/08/create-a-new-folder.jpg", "image_path": "data/videos/21be53f9-9236-4f02-947a-68a93901db8a/images/image_5.webp"}, {"slide_number": "6", "title": "Creating a Django App", "slide_type": "Image Right", "content": "'cd my_google_project'\n'python manage.py startapp youtube'", "image_desc": "A screenshot showing the terminal with the commands to create a new app.", "narration": "Next, navigate into your project directory and create a new app using 'python manage.py startapp youtube'.  Replace 'youtube' with your desired app name.", "image_url": "https://www.freecodecamp.org/news/content/images/2022/09/cmd9.PNG", "image_path": "data/videos/21be53f9-9236-4f02-947a-68a93901db8a/images/image_6.webp"}, {"slide_number": "7", "title": "Project Structure", "slide_type": "Image with Caption", "content": "(Detailed project structure is shown in the image)", "image_desc": "A clear visual representation of the Django project directory structure, highlighting key files and folders (manage.py, settings.py, urls.py, apps, etc.).", "narration": "Let's look at the project structure.  You'll see key files like 'manage.py' for project management, 'settings.py' for configurations, and 'urls.py' for URL routing.  Your app will contain files for models, views, and templates.", "image_url": "https://i.ytimg.com/vi/u49eOt8XJA4/maxresdefault.jpg", "image_path": "data/videos/21be53f9-9236-4f02-947a-68a93901db8a/images/image_7.webp"}, {"slide_number": "8", "title": "Understanding the Structure", "slide_type": "Two Columns", "content": "**Column 1: Key Files**\nmanage.py\nsettings.py\nurls.py\nwsgi.py\n**Column 2: App Files**\nmodels.py\nviews.py\ntemplates", "image_desc": "An image illustrating the relationship between the project and app files.", "narration": "'manage.py' is your command-line interface. 'settings.py' holds your project settings. 'urls.py' maps URLs to views. 'wsgi.py' is the web server gateway interface. Your app's 'models.py' defines your data, 'views.py' handles requests, and 'templates' contain your HTML.", "image_url": "https://pics.craiyon.com/2023-12-19/Wec1TOShTmmiBaqY7ky4Dw.webp", "image_path": "data/videos/21be53f9-9236-4f02-947a-68a93901db8a/images/image_8.webp"}, {"slide_number": "9", "title": "Creating a Simple View", "slide_type": "Image Right", "content": "Code example from 'youtube/views.py' shown", "image_desc": "A screenshot of the 'views.py' file showing the 'home_page' view function.", "narration": "Here's a simple view function in 'views.py' that renders a template.  This function handles incoming requests and returns a response.", "image_url": "https://www.programink.com/static/img/django-tutorial.png", "image_path": "data/videos/21be53f9-9236-4f02-947a-68a93901db8a/images/image_9.webp"}, {"slide_number": "10", "title": "Mapping the URL", "slide_type": "Image Right", "content": "Code examples from 'my_google_project/urls.py' and 'youtube/urls.py' shown", "image_desc": "Screenshots of the 'urls.py' files showing URL routing configurations.", "narration": "We map the URL to this view using the 'urls.py' files. This connects the URL path to the specific view function.", "image_url": "https://thepythoncode.com/media/articles/build-bookstore-app-with-django-backend-python/7-min.jpg", "image_path": "data/videos/21be53f9-9236-4f02-947a-68a93901db8a/images/image_10.webp"}, {"slide_number": "11", "title": "Creating a Template", "slide_type": "Image Right", "content": "Code example from 'youtube/templates/youtube/home.html' shown", "image_desc": "A screenshot of the 'home.html' template file.", "narration": "This is a simple HTML template that will be rendered by our view.", "image_url": "https://fileinfo.com/img/ss/xl/html_36.png", "image_path": "data/videos/21be53f9-9236-4f02-947a-68a93901db8a/images/image_11.webp"}, {"slide_number": "12", "title": "Running the Development Server", "slide_type": "Image with Caption", "content": "'python manage.py runserver'", "image_desc": "A screenshot of a terminal window showing the development server running.", "narration": "Finally, run the development server using 'python manage.py runserver'. You can now access your application in your web browser.  Congratulations, you've built your first Django application!", "image_url": "https://i.stack.imgur.com/WW2a2.png", "image_path": "data/videos/21be53f9-9236-4f02-947a-68a93901db8a/images/image_12.webp"}]