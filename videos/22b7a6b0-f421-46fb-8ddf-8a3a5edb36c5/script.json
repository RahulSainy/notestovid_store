[{"slide_number": "1", "title": "JavaScript Bootcamp in Five Minutes", "slide_type": "Title Slide", "content": "No Content", "image_desc": "No Image Description", "video_desc": "javascript tutorial", "narration": "Welcome to your fiveminute JavaScript bootcamp designed to quickly get you up to speed with the fundamentals. This is the fastest way to grasp what JavaScript is how it functions and how you can begin coding today. Let's dive straight in and unlock the power of JavaScript together.", "image_urls": ["No Image Found"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_1.webp", "video_urls": ["https://videos.pexels.com/video-files/3196292/3196292-sd_640_360_25fps.mp4"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_1.mp4"}, {"slide_number": "2", "title": "What is JavaScript?", "slide_type": "Image Left", "content": "The language of the web.\nAdds interactivity to web pages.\nPowers sliders, forms, and games.", "image_desc": "HTML CSS JavaScript relationship. Type: diagram", "video_desc": "", "narration": "JavaScript is the programming language that breathes life into the web. While HTML provides the structure and CSS handles the styling JavaScript makes web pages interactive. Think of dynamic sliders interactive forms and engaging games  all brought to life with JavaScript.", "image_urls": ["No Image Found"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_2.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_2.mp4"}, {"slide_number": "3", "title": "HTML - The Foundation", "slide_type": "Image Right", "content": "Provides the structure of the webpage.\nDefines elements like headings, paragraphs, and images.\nThink of it as the skeleton of your website.", "image_desc": "HTML code example. Type: code snippet", "video_desc": "", "narration": "HTML or HyperText Markup Language is the foundation upon which every webpage is built. It provides the structural elements defining headings paragraphs images and more. Consider HTML as the skeleton that gives your website its basic form and organization.", "image_urls": ["https://www.accessi.org/blog/wp-content/uploads/2022/01/pankaj-patel-u2Ru4QBXA5Q-unsplash.jpg"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_3.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_3.mp4"}, {"slide_number": "4", "title": "CSS - The Stylist", "slide_type": "Image Left", "content": "Styles the appearance of the webpage.\nControls colors, fonts, and layout.\nMakes your website visually appealing.", "image_desc": "CSS code example. Type: code snippet", "video_desc": "", "narration": "CSS or Cascading Style Sheets is responsible for the visual presentation of your webpage. It controls the colors fonts layout and overall aesthetic appeal. CSS transforms a basic HTML structure into a visually engaging and userfriendly experience.", "image_urls": ["https://www.accessi.org/blog/wp-content/uploads/2022/01/pankaj-patel-u2Ru4QBXA5Q-unsplash.jpg"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_4.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_4.mp4"}, {"slide_number": "5", "title": "JavaScript - The Interactor", "slide_type": "Image Right", "content": "Adds interactivity and dynamic behavior.\nHandles user interactions and events.\nMakes your website responsive and engaging.", "image_desc": "JavaScript code example. Type: code snippet", "video_desc": "", "narration": "JavaScript brings interactivity and dynamic behavior to your website. It handles user interactions responds to events and updates content in realtime. With JavaScript your website becomes more than just a static page it becomes a responsive and engaging experience for your users.", "image_urls": ["No Image Found"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_5.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_5.mp4"}, {"slide_number": "6", "title": "Where Does JavaScript Go?", "slide_type": "Image Left", "content": "Inline JavaScript.\nInternal JavaScript.\nExternal JavaScript.", "image_desc": "HTML file with script tag. Type: code snippet", "video_desc": "", "narration": "There are three primary ways to incorporate JavaScript into your web projects inline internal and external. Each method has its use cases but external JavaScript is generally preferred for maintaining clean and organized code. Let's explore each of these methods in more detail.", "image_urls": ["https://refiner.io/docs/wp-content/uploads/2024/03/Screenshot-2024-03-11-at-11.55.15-1024x609.png"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_6.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_6.mp4"}, {"slide_number": "7", "title": "Inline JavaScript", "slide_type": "Image Right", "content": "Directly within HTML tags.\nNot recommended for large projects.\nCan make code difficult to maintain.", "image_desc": "Inline JavaScript example. Type: code snippet", "video_desc": "", "narration": "Inline JavaScript involves embedding JavaScript code directly within HTML tags typically using event attributes. While convenient for small snippets this method is not recommended for larger projects. It can lead to messy code that is difficult to maintain and update.", "image_urls": ["https://glebbahmutov.com/disable-inline-javascript-tutorial/insecure-demo-result.png"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_7.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_7.mp4"}, {"slide_number": "8", "title": "Internal JavaScript", "slide_type": "Image Left", "content": "Within '<script>' tags in the HTML file.\nSuitable for page-specific scripts.\nKeeps JavaScript separate from HTML content.", "image_desc": "Internal JavaScript example. Type: code snippet", "video_desc": "", "narration": "Internal JavaScript involves placing JavaScript code within 'script' tags inside your HTML file. This approach is suitable for pagespecific scripts and helps to keep your JavaScript code separate from your HTML content. However for larger projects external JavaScript is still the preferred method.", "image_urls": ["https://www.mongodb.com/community/forums/uploads/default/original/3X/2/8/28b48adb736445287eb4c1791a74a0df6485ffd1.png"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_8.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_8.mp4"}, {"slide_number": "9", "title": "External JavaScript", "slide_type": "Image Right", "content": "In a separate '.js' file.\nLinked to the HTML file using '<script src=\"...\">'.\nBest practice for maintainability and reusability.", "image_desc": "External JavaScript example. Type: code snippet", "video_desc": "", "narration": "External JavaScript involves writing your JavaScript code in a separate '.js' file and linking it to your HTML file using the 'script src...' tag. This is considered the best practice for maintainability and reusability. It keeps your code organized making it easier to update and debug.", "image_urls": ["No Image Found"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_9.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_9.mp4"}, {"slide_number": "10", "title": "Linking External JavaScript", "slide_type": "Image Left", "content": "Use the '<script>' tag with the 'src' attribute.\nPlace the '<script>' tag before the closing '</body>' tag.\nEnsures the HTML is parsed before the JavaScript runs.", "image_desc": "Linking JavaScript in HTML. Type: code snippet", "video_desc": "", "narration": "To link an external JavaScript file use the 'script' tag with the 'src' attribute specifying the path to your '.js' file. It's best practice to place the 'script' tag just before the closing 'body' tag. This ensures that the HTML is fully parsed before the JavaScript code is executed.", "image_urls": ["https://confluence.atlassian.com/doc/files/139390/1005333523/2/1727934904181/code-block-view.png"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_10.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_10.mp4"}, {"slide_number": "11", "title": "Variables: Storing Data", "slide_type": "Image Right", "content": "'let': For variables that can change.\n'const': For variables that cannot change.\n'var': Avoid using 'var' in modern JavaScript.", "image_desc": "let const var boxes. Type: illustration", "video_desc": "", "narration": "Variables are used to store data in JavaScript. We primarily use 'let' and 'const' to declare variables. 'let' is used for variables whose values may change while 'const' is used for variables that should remain constant. In modern JavaScript it's best to avoid using 'var'.", "image_urls": ["https://miro.medium.com/v2/resize:fit:1400/0*mYuuRwjUfUOAdHpo.jpg"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_11.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_11.mp4"}, {"slide_number": "12", "title": "Data Types in JavaScript", "slide_type": "Image Left", "content": "String: Text enclosed in quotes (e.g., \"Hello\").\nNumber: Numeric values (e.g., twenty-five).\nBoolean: True or false values.", "image_desc": "String number boolean icons. Type: icons", "video_desc": "", "narration": "JavaScript supports several data types including strings numbers and booleans. Strings are used to represent text and are enclosed in quotes. Numbers represent numeric values and booleans represent true or false values. Understanding these data types is crucial for working with variables.", "image_urls": ["https://canada1.discourse-cdn.com/flex004/uploads/omni/original/1X/b2f63a457c04be116ef72902a5ed20e3bf63d28f.png"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_12.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_12.mp4"}, {"slide_number": "13", "title": "String Data Type", "slide_type": "Image Right", "content": "Represents textual data.\nEnclosed in single or double quotes.\nExample: let message = \"Hello, world!\";", "image_desc": "String data type example. Type: code snippet", "video_desc": "", "narration": "The string data type is used to represent textual data in JavaScript. Strings are enclosed in either single or double quotes. For example 'let message  Hello world' declares a variable named 'message' and assigns it the string value Hello world.", "image_urls": ["https://miro.medium.com/v2/resize:fit:415/1*uCklDYmsGpcht95DBIBBrA.png"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_13.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_13.mp4"}, {"slide_number": "14", "title": "Number Data Type", "slide_type": "Image Left", "content": "Represents numeric values.\nCan be integers or floating-point numbers.\nExample: const age = twenty-five;", "image_desc": "Number data type example. Type: code snippet", "video_desc": "", "narration": "The number data type is used to represent numeric values in JavaScript. Numbers can be integers like twentyfive or floatingpoint numbers like three point fourteen. JavaScript does not differentiate between integer and floatingpoint numbers they are both treated as numbers.", "image_urls": ["https://cdn.sparkfun.com/tutorialimages/datatypes/code_byte.jpg"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_14.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_14.mp4"}, {"slide_number": "15", "title": "Boolean Data Type", "slide_type": "Image Right", "content": "Represents true or false values.\nUsed for logical operations.\nExample: let isStudent = true;", "image_desc": "Boolean data type example. Type: code snippet", "video_desc": "", "narration": "The boolean data type represents true or false values in JavaScript. Booleans are commonly used for logical operations and conditional statements. For example 'let isStudent  true' declares a variable named 'isStudent' and assigns it the boolean value 'true'.", "image_urls": ["https://cdn.sparkfun.com/tutorialimages/datatypes/code_byte.jpg"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_15.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_15.mp4"}, {"slide_number": "16", "title": "Functions: Reusable Code Blocks", "slide_type": "Image Left", "content": "Blocks of code that perform a specific task.\nCan be called multiple times.\nImprove code organization and reusability.", "image_desc": "JavaScript function example. Type: code snippet", "video_desc": "", "narration": "Functions are reusable blocks of code that perform a specific task. They can be called multiple times throughout your code improving organization and reusability. Functions are essential for writing modular and maintainable JavaScript code.", "image_urls": ["https://i0.wp.com/basescripts.com/wp-content/uploads/2023/05/image-6.png?fit=1712%2C876&ssl=1"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_16.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_16.mp4"}, {"slide_number": "17", "title": "Events: Triggering Actions", "slide_type": "Image Right", "content": "Actions that occur in the browser.\nExamples: click, mouseover, keypress.\nUsed to trigger JavaScript functions.", "image_desc": "Button click event. Type: illustration", "video_desc": "", "narration": "Events are actions that occur in the browser such as a user clicking a button hovering over an element or pressing a key. Events are used to trigger JavaScript functions making your web pages interactive and responsive to user actions.", "image_urls": ["No Image Found"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_17.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_17.mp4"}, {"slide_number": "18", "title": "Combining Functions and Events", "slide_type": "Image Left", "content": "Use event listeners to call functions.\nExample: '<button onclick=\"myFunction()\">Click Me!</button>'.\nMakes your page interactive.", "image_desc": "Function triggering on click. Type: code snippet", "video_desc": "", "narration": "You can combine functions and events to create interactive web pages. By using event listeners you can call functions when specific events occur. For example the code 'button onclickmyFunctionClick Mebutton' calls the 'myFunction' when the button is clicked.", "image_urls": ["https://pafe.piotnet.com/wp-content/uploads/2022/07/hide.png"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_18.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_18.mp4"}, {"slide_number": "19", "title": "Conditionals: Making Decisions", "slide_type": "Image Right", "content": "'if' statements: Execute code based on a condition.\n'else' statements: Execute code if the condition is false.\n'else if' statements: Check multiple conditions.", "image_desc": "IF THEN ELSE flowchart. Type: flowchart", "video_desc": "", "narration": "Conditional statements such as 'if' 'else' and 'else if' allow you to make decisions in your code. They execute different blocks of code based on whether a condition is true or false. Conditionals are essential for creating dynamic and responsive applications.", "image_urls": ["https://images.wondershare.com/edrawmax/article2023/flowchart-if-else/if-else-statements-flowcharts-insight.jpg"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_19.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_19.mp4"}, {"slide_number": "20", "title": "Loops: Repeating Tasks", "slide_type": "Image Left", "content": "'for' loops: Repeat a block of code a specific number of times.\n'while' loops: Repeat a block of code while a condition is true.\nUsed for iterating over arrays and data structures.", "image_desc": "Looping through a list of names. Type: animation", "video_desc": "", "narration": "Loops allow you to repeat a block of code multiple times. 'for' loops are used to repeat a block of code a specific number of times while 'while' loops repeat a block of code as long as a condition is true. Loops are essential for iterating over arrays and data structures automating repetitive tasks.", "image_urls": ["https://files.realpython.com/media/UPDATE-Python-for-Loops-Definite-Iteration_Watermarked.32bfd8825dfe.jpg"], "image_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/image_20.webp", "video_urls": ["No Video Found"], "video_path": "data/videos/22b7a6b0-f421-46fb-8ddf-8a3a5edb36c5/images/video_20.mp4"}]